//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Controllers
{
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Authorization;
    using QAMS.Common.Entities;
    using QAMS.Entities;
    using QAMS.Sheet1.Services;
    
    
    /// <summary>
    /// Comment
    /// </summary>
    [ApiController()]
    [Route("api/customernotification")]
    public class CustomerNotificationController : ControllerBase
    {
        
        private readonly ICustomerNotificationService customerNotificationService;
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="customerNotificationService"></param>
        public CustomerNotificationController(ICustomerNotificationService customerNotificationService)
        {
            this.customerNotificationService = customerNotificationService;
        }
        
        /// <summary>
        /// This method is used to Get List of CustomerNotification
        /// </summary>
        /// <param name="requestContext"></param>
        [HttpPost()]
        public ActionResult<ResponseContext<CustomerNotification>> GetAllCustomerNotification(RequestContext requestContext)
        {
            var result = customerNotificationService.GetAllCustomerNotification(requestContext);
            return result;
        }
        
        /// <summary>
        /// This method is used to Get CustomerNotification By Id cNId
        /// </summary>
        /// <param name="cNId"></param>
        [HttpGet("{cNId}")]
        public ActionResult<CustomerNotification> GetCustomerNotificationByCNId(System.Int32? cNId)
        {
            var result = customerNotificationService.GetCustomerNotificationByCNId(cNId);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Save CustomerNotification
        /// </summary>
        /// <param name="customerNotification"></param>
        [HttpPost("savecustomernotification")]
        public ActionResult<System.Boolean> SaveCustomerNotification(CustomerNotification customerNotification)
        {
            var result = customerNotificationService.SaveCustomerNotification(customerNotification);
            return result;
        }
        
        /// <summary>
        /// This Method is used to update CustomerNotification
        /// </summary>
        /// <param name="customerNotification"></param>
        [HttpPost("updatecustomernotification")]
        public ActionResult<System.Boolean> UpdateCustomerNotification(CustomerNotification customerNotification)
        {
            var result = customerNotificationService.UpdateCustomerNotification(customerNotification);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Delete CustomerNotification By Id cNId
        /// </summary>
        /// <param name="cNId"></param>
        [HttpDelete("{cNId}")]
        public ActionResult<bool> DeleteCustomerNotificationByCNId(System.Int32? cNId)
        {
            var result = customerNotificationService.DeleteCustomerNotificationByCNId(cNId);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Delete CustomerNotification By Multiple ids cNIds
        /// </summary>
        /// <param name="cNIds"></param>
        [HttpDelete("deleteAll")]
        public ActionResult<bool> DeleteAllCustomerNotification(List<int> cNIds)
        {
            var result = customerNotificationService.DeleteAllCustomerNotification(cNIds);
            return result;
        }
    }
}
