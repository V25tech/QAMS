//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Tests
{
    using System;
    using System.Data;
    using System.Data.SqlClient;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using QAMS.Common.Entities;
    using QAMS.WEB.Entities;
    using QAMS.WEB.Data;
    using QAMS.WEB.Services;
    using Moq;
    using NUnit.Framework;
    
    
    /// <summary>
    /// Comment
    /// </summary>
    public class ChangeControlRegistrationTest
    {
        
        private Mock<IChangeControlRegistrationData> changeControlRegistrationData;
        
        private IChangeControlRegistrationService changeControlRegistrationService;
        
        [SetUp()]
        public void Setup()
        {
              changeControlRegistrationData = new Mock<IChangeControlRegistrationData>();
              changeControlRegistrationService = new ChangeControlRegistrationService(changeControlRegistrationData.Object);
        }
        
        [Test()]
        public void GetAllChangeControlRegistration()
        {
            List<ChangeControlRegistration> changeControlRegistration = new List<ChangeControlRegistration>();
            RequestContext requestContext = new RequestContext();
            requestContext.PageNumber=1;
            requestContext.PageSize=10;
            changeControlRegistrationData.Setup(p=>p.GetAllChangeControlRegistration(requestContext)).Returns(MockChangeControlRegistrationData());
            var result = changeControlRegistrationService.GetAllChangeControlRegistration(requestContext);
            Assert.IsNotNull(result);
        }
        
        [Test()]
        public void GetChangeControlRegistrationByChangeControlId()
        {
            int changeControlId = 0;
            changeControlRegistrationData.Setup(p=>p.GetChangeControlRegistrationByChangeControlId(changeControlId)).Returns(MockChangeControlRegistrationData());
            var result = changeControlRegistrationService.GetChangeControlRegistrationByChangeControlId(changeControlId);
            Assert.IsNotNull(result);
        }
        
        [Test()]
        public void SaveChangeControlRegistration()
        {
            ChangeControlRegistration changeControlRegistration = ChangeControlRegistrationViewModel();
            System.Boolean changeControlId = false;
            changeControlRegistrationData.Setup(p=>p.SaveChangeControlRegistration(changeControlRegistration)).Returns(changeControlId);
            var result = changeControlRegistrationService.SaveChangeControlRegistration(changeControlRegistration);
            Assert.IsNotNull(result);
        }
        
        [Test()]
        public void UpdateChangeControlRegistration()
        {
            ChangeControlRegistration changeControlRegistration = ChangeControlRegistrationViewModel();
            bool changeControlId = false;
            changeControlRegistrationData.Setup(p=>p.UpdateChangeControlRegistration(changeControlRegistration)).Returns(changeControlId);
            var result = changeControlRegistrationService.UpdateChangeControlRegistration(changeControlRegistration);
            Assert.IsNotNull(result);
        }
        
        [Test()]
        public void DeleteChangeControlRegistrationByChangeControlId()
        {
            int changeControlId = 0;
            bool result = false;
            changeControlRegistrationData.Setup(p=>p.DeleteChangeControlRegistrationByChangeControlId(changeControlId)).Returns(result);
            var changeControlRegistration = changeControlRegistrationService.DeleteChangeControlRegistrationByChangeControlId(changeControlId);
            Assert.IsNotNull(changeControlRegistration);
        }
        
        public DataSet MockChangeControlRegistrationData()
        {
            DataSet dataset = new DataSet();
            DataTable dataTable = new DataTable();
            dataset.Tables.Add(dataTable);
            return dataset;
        }
        
        public ChangeControlRegistration ChangeControlRegistrationViewModel()
        {
            try
            {
                ChangeControlRegistration changeControlRegistration = new ChangeControlRegistration();
                return changeControlRegistration;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}
