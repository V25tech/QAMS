//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Tests
{
    using System;
    using System.Data;
    using System.Data.SqlClient;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using QAMS.Common.Entities;
    using QAMS.Entities;
    using QAMS.Sheet1.Data;
    using QAMS.Sheet1.Services;
    using Moq;
    using NUnit.Framework;
    
    
    /// <summary>
    /// Comment
    /// </summary>
    public class ActionPlanReviewTest
    {
        
        private Mock<IActionPlanReviewData> actionPlanReviewData;
        
        private IActionPlanReviewService actionPlanReviewService;
        
        [SetUp()]
        public void Setup()
        {
              actionPlanReviewData = new Mock<IActionPlanReviewData>();
              actionPlanReviewService = new ActionPlanReviewService(actionPlanReviewData.Object);
        }
        
        [Test()]
        public void GetAllActionPlanReview()
        {
            List<ActionPlanReview> actionPlanReview = new List<ActionPlanReview>();
            RequestContext requestContext = new RequestContext();
            requestContext.PageNumber=1;
            requestContext.PageSize=10;
            actionPlanReviewData.Setup(p=>p.GetAllActionPlanReview(requestContext)).Returns(MockActionPlanReviewData());
            var result = actionPlanReviewService.GetAllActionPlanReview(requestContext);
            Assert.IsNotNull(result);
        }
        
        [Test()]
        public void GetActionPlanReviewByAPId()
        {
            int aPId = 0;
            actionPlanReviewData.Setup(p=>p.GetActionPlanReviewByAPId(aPId)).Returns(MockActionPlanReviewData());
            var result = actionPlanReviewService.GetActionPlanReviewByAPId(aPId);
            Assert.IsNotNull(result);
        }
        
        [Test()]
        public void SaveActionPlanReview()
        {
            ActionPlanReview actionPlanReview = ActionPlanReviewViewModel();
            System.Boolean aPId = false;
            actionPlanReviewData.Setup(p=>p.SaveActionPlanReview(actionPlanReview)).Returns(aPId);
            var result = actionPlanReviewService.SaveActionPlanReview(actionPlanReview);
            Assert.IsNotNull(result);
        }
        
        [Test()]
        public void UpdateActionPlanReview()
        {
            ActionPlanReview actionPlanReview = ActionPlanReviewViewModel();
            bool aPId = false;
            actionPlanReviewData.Setup(p=>p.UpdateActionPlanReview(actionPlanReview)).Returns(aPId);
            var result = actionPlanReviewService.UpdateActionPlanReview(actionPlanReview);
            Assert.IsNotNull(result);
        }
        
        [Test()]
        public void DeleteActionPlanReviewByAPId()
        {
            int aPId = 0;
            bool result = false;
            actionPlanReviewData.Setup(p=>p.DeleteActionPlanReviewByAPId(aPId)).Returns(result);
            var actionPlanReview = actionPlanReviewService.DeleteActionPlanReviewByAPId(aPId);
            Assert.IsNotNull(actionPlanReview);
        }
        
        public DataSet MockActionPlanReviewData()
        {
            DataSet dataset = new DataSet();
            DataTable dataTable = new DataTable();
            dataset.Tables.Add(dataTable);
            return dataset;
        }
        
        public ActionPlanReview ActionPlanReviewViewModel()
        {
            try
            {
                ActionPlanReview actionPlanReview = new ActionPlanReview();
                return actionPlanReview;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}
