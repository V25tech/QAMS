//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Tests
{
    using System;
    using System.Data;
    using System.Data.SqlClient;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using QAMS.Common.Entities;
    using QAMS.WEB.Entities;
    using QAMS.WEB.Data;
    using QAMS.WEB.Services;
    using Moq;
    using NUnit.Framework;
    
    
    /// <summary>
    /// Comment
    /// </summary>
    public class ChangeContolQaApprovalTest
    {
        
        private Mock<IChangeContolQaApprovalData> changeContolQaApprovalData;
        
        private IChangeContolQaApprovalService changeContolQaApprovalService;
        
        [SetUp()]
        public void Setup()
        {
              changeContolQaApprovalData = new Mock<IChangeContolQaApprovalData>();
              changeContolQaApprovalService = new ChangeContolQaApprovalService(changeContolQaApprovalData.Object);
        }
        
        [Test()]
        public void GetAllChangeContolQaApproval()
        {
            List<ChangeContolQaApproval> changeContolQaApproval = new List<ChangeContolQaApproval>();
            RequestContext requestContext = new RequestContext();
            requestContext.PageNumber=1;
            requestContext.PageSize=10;
            changeContolQaApprovalData.Setup(p=>p.GetAllChangeContolQaApproval(requestContext)).Returns(MockChangeContolQaApprovalData());
            var result = changeContolQaApprovalService.GetAllChangeContolQaApproval(requestContext);
            Assert.IsNotNull(result);
        }
        
        [Test()]
        public void GetChangeContolQaApprovalByChangeContolQaApprovalId()
        {
            int changeContolQaApprovalId = 0;
            changeContolQaApprovalData.Setup(p=>p.GetChangeContolQaApprovalByChangeContolQaApprovalId(changeContolQaApprovalId)).Returns(MockChangeContolQaApprovalData());
            var result = changeContolQaApprovalService.GetChangeContolQaApprovalByChangeContolQaApprovalId(changeContolQaApprovalId);
            Assert.IsNotNull(result);
        }
        
        [Test()]
        public void SaveChangeContolQaApproval()
        {
            ChangeContolQaApproval changeContolQaApproval = ChangeContolQaApprovalViewModel();
            System.Boolean changeContolQaApprovalId = false;
            changeContolQaApprovalData.Setup(p=>p.SaveChangeContolQaApproval(changeContolQaApproval)).Returns(changeContolQaApprovalId);
            var result = changeContolQaApprovalService.SaveChangeContolQaApproval(changeContolQaApproval);
            Assert.IsNotNull(result);
        }
        
        [Test()]
        public void UpdateChangeContolQaApproval()
        {
            ChangeContolQaApproval changeContolQaApproval = ChangeContolQaApprovalViewModel();
            bool changeContolQaApprovalId = false;
            changeContolQaApprovalData.Setup(p=>p.UpdateChangeContolQaApproval(changeContolQaApproval)).Returns(changeContolQaApprovalId);
            var result = changeContolQaApprovalService.UpdateChangeContolQaApproval(changeContolQaApproval);
            Assert.IsNotNull(result);
        }
        
        [Test()]
        public void DeleteChangeContolQaApprovalByChangeContolQaApprovalId()
        {
            int changeContolQaApprovalId = 0;
            bool result = false;
            changeContolQaApprovalData.Setup(p=>p.DeleteChangeContolQaApprovalByChangeContolQaApprovalId(changeContolQaApprovalId)).Returns(result);
            var changeContolQaApproval = changeContolQaApprovalService.DeleteChangeContolQaApprovalByChangeContolQaApprovalId(changeContolQaApprovalId);
            Assert.IsNotNull(changeContolQaApproval);
        }
        
        public DataSet MockChangeContolQaApprovalData()
        {
            DataSet dataset = new DataSet();
            DataTable dataTable = new DataTable();
            dataset.Tables.Add(dataTable);
            return dataset;
        }
        
        public ChangeContolQaApproval ChangeContolQaApprovalViewModel()
        {
            try
            {
                ChangeContolQaApproval changeContolQaApproval = new ChangeContolQaApproval();
                return changeContolQaApproval;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}
