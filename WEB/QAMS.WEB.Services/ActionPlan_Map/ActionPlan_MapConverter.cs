//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.WEB.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using QAMS.WEB.Entities;
    using VAMLIbrary.Core.Extentions;
    using QAMS.Common.Entities;
    
    
    // Comment
    public static class ActionPlan_MapConverter
    {
        
        public static List<ActionPlan_Map> SetAllActionPlan_Map(DataSet dataset)
        {
            try
            {
                List<ActionPlan_Map> result = new List<ActionPlan_Map>();
                ActionPlan_Map actionPlan_MapData;
                if (dataset != null && dataset.Tables.Count > 0 && dataset.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; (i < dataset.Tables[0].Rows.Count); i = (i + 1))
                    {
                        DataRow row = dataset.Tables[0].Rows[i];
                        actionPlan_MapData = new ActionPlan_Map();
                        actionPlan_MapData.UserId = DatatypeConverter.SetIntValue(row[ActionPlan_MapConstants.UserId.TrimAt()]);
                        actionPlan_MapData.CategoryId = DatatypeConverter.SetIntValue(row[ActionPlan_MapConstants.CategoryId.TrimAt()]);
                        actionPlan_MapData.IsReviewed = DatatypeConverter.SetBoolValue(row[ActionPlan_MapConstants.IsReviewed.TrimAt()]);
                        actionPlan_MapData.IsActionPlan = DatatypeConverter.SetBoolValue(row[ActionPlan_MapConstants.IsActionPlan.TrimAt()]);
                        actionPlan_MapData.initId = DatatypeConverter.SetBoolValue(row[ActionPlan_MapConstants.initId.TrimAt()]);
                        actionPlan_MapData.DocumentAction = DatatypeConverter.SetBoolValue(row[ActionPlan_MapConstants.DocumentAction.TrimAt()]);
                        actionPlan_MapData.DocumentCategory = Convert.ToString(row[ActionPlan_MapConstants.DocumentCategory.TrimAt()]);
                        actionPlan_MapData.CreatedBy = Convert.ToString(row[ActionPlan_MapConstants.CreatedBy.TrimAt()]);
                        actionPlan_MapData.CreatedDate = DatatypeConverter.SetDateTime(row[ActionPlan_MapConstants.CreatedDate.TrimAt()]);
                        actionPlan_MapData.ModifiedBy = Convert.ToString(row[ActionPlan_MapConstants.ModifiedBy.TrimAt()]);
                        actionPlan_MapData.ModifiedDate = DatatypeConverter.SetDateTime(row[ActionPlan_MapConstants.ModifiedDate.TrimAt()]);
                        result.Add(actionPlan_MapData);
                    }
                }
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public static ActionPlan_Map SetActionPlan_Map(DataSet dataset)
        {
            var result = SetAllActionPlan_Map(dataset);
            if (result.Count > 0)
            {
                return result.FirstOrDefault();
            }
            return null;
        }
    }
}
