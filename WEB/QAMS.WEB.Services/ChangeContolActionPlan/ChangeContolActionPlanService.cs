//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Admin.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using QAMS.Common.Entities;
    using QAMS.Admin.Entities;
    using QAMS.Admin.Data;
    using QAMS.WEB.Services;
    using QAMS.WEB.Data;
    using QAMS.WEB.Entities;


    // Comment
    public class ChangeContolActionPlanService : IChangeContolActionPlanService
    {

        private readonly IChangeContolActionPlanData changeContolActionPlanData;

        /// <summary>
        /// 
        /// </summary>
        /// <param name="changeContolActionPlanData"></param>
        public ChangeContolActionPlanService(IChangeContolActionPlanData changeContolActionPlanData)
        {
            this.changeContolActionPlanData = changeContolActionPlanData;
        }

        public ResponseContext<ChangeContolActionPlan> GetAllChangeContolActionPlan(RequestContext requestContext)
        {
            try
            {
                DataSet dataset = changeContolActionPlanData.GetAllChangeContolActionPlan(requestContext);
                List<ChangeContolActionPlan> result = ChangeContolActionPlanConverter.SetAllChangeContolActionPlan(dataset);
                return new ResponseContext<ChangeContolActionPlan>() { RowCount = CommonConverter.SetRowsCount(dataset), Response = result };
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public ChangeContolActionPlan GetChangeContolActionPlanByChangeContolActionPlanId(System.Int32? changeContolActionPlanId)
        {
            try
            {
                DataSet dataset = changeContolActionPlanData.GetChangeContolActionPlanByChangeContolActionPlanId(changeContolActionPlanId);
                ChangeContolActionPlan result = ChangeContolActionPlanConverter.SetChangeContolActionPlan(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        public List<ChangeContolActionPlan> GetChangeContolActionPlansByInitId(System.Int32? initId)
        {
            try
            {
                DataSet dataset = changeContolActionPlanData.GetChangeContolActionPlansByInitId(initId);
                List<ChangeContolActionPlan> result = ChangeContolActionPlanConverter.SetChangeContolActionPlanByInitId(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool SaveChangeContolActionPlan(ChangeContolActionPlan changeContolActionPlan)
        {
            try
            {
                String validationMessages = ChangeContolActionPlanValidator.IsValidChangeContolActionPlan(changeContolActionPlan);
                if (validationMessages.Length <= 0)
                {
                    var result = changeContolActionPlanData.SaveChangeContolActionPlan(changeContolActionPlan);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool UpdateChangeContolActionPlan(ChangeContolActionPlan changeContolActionPlan)
        {
            try
            {
                String validationMessages = ChangeContolActionPlanValidator.IsValidChangeContolActionPlan(changeContolActionPlan);
                if (validationMessages.Length <= 0)
                {
                    bool result = changeContolActionPlanData.UpdateChangeContolActionPlan(changeContolActionPlan);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool DeleteChangeContolActionPlanByChangeContolActionPlanId(System.Int32? changeContolActionPlanId)
        {
            try
            {
                return changeContolActionPlanData.DeleteChangeContolActionPlanByChangeContolActionPlanId(changeContolActionPlanId);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool DeleteAllChangeContolActionPlan(List<int> changeContolActionPlanIds)
        {
            try
            {
                return changeContolActionPlanData.DeleteAllChangeContolActionPlan(changeContolActionPlanIds);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public List<ChangeContolActionPlan> GetChangeContolActionPlanByDepartmentId(System.Int32? id)
        {
            try
            {
                DataSet dataset = changeContolActionPlanData.GetChangeContolActionPlanByDepartmentId(id);
                List<ChangeContolActionPlan> result = ChangeContolActionPlanConverter.SetAllChangeContolActionPlan(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public List<ChangeContolActionPlan> GetChangeContolActionPlanByUserId(System.Int32? id)
        {
            try
            {
                DataSet dataset = changeContolActionPlanData.GetChangeContolActionPlanByUserId(id);
                List<ChangeContolActionPlan> result = ChangeContolActionPlanConverter.SetAllChangeContolActionPlan(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public List<ChangeContolActionPlan> GetActionPlanByIntIdandWorkId(int p_IntId, int p_WorkId)
        {
            try
            {
                DataSet dataset = changeContolActionPlanData.GetActionPlanByIntIdandWorkId(p_IntId, p_WorkId);
                List<ChangeContolActionPlan> result = ChangeContolActionPlanConverter.SetAllChangeContolActionPlan(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        public List<string> GetActivitiesByInitiative(int p_IntId)
        {
            try
            {
                DataSet dataset = changeContolActionPlanData.GetActivitiesByInitiative(p_IntId);
                List<string> result = ChangeContolActionPlanConverter.SetActivities(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public List<ChangeContolActionPlan> GetChangeContolActionPlanByUserGroupId(System.Int32? id)
        {
            try
            {
                DataSet dataset = changeContolActionPlanData.GetChangeContolActionPlanByUserGroupId(id);
                List<ChangeContolActionPlan> result = ChangeContolActionPlanConverter.SetAllChangeContolActionPlan(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool DeleteChangeContolActionPlanByDepartmentId(System.Int32? id)
        {
            try
            {
                return changeContolActionPlanData.DeleteChangeContolActionPlanByDepartmentId(id);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool DeleteChangeContolActionPlanByUserId(System.Int32? id)
        {
            try
            {
                return changeContolActionPlanData.DeleteChangeContolActionPlanByUserId(id);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool DeleteChangeContolActionPlanByUserGroupId(System.Int32? id)
        {
            try
            {
                return changeContolActionPlanData.DeleteChangeContolActionPlanByUserGroupId(id);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}
