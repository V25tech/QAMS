//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.WEB.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using QAMS.Common.Entities;
    using QAMS.WEB.Entities;
    using QAMS.WEB.Data;
    
    
    // Comment
    public class ChangeContolQaApprovalService : IChangeContolQaApprovalService
    {
        
        private readonly IChangeContolQaApprovalData changeContolQaApprovalData;
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="changeContolQaApprovalData"></param>
        public ChangeContolQaApprovalService(IChangeContolQaApprovalData changeContolQaApprovalData)
        {
            this.changeContolQaApprovalData = changeContolQaApprovalData;
        }
        
        public ResponseContext<ChangeContolQaApproval> GetAllChangeContolQaApproval(RequestContext requestContext)
        {
            try
            {
                DataSet dataset = changeContolQaApprovalData.GetAllChangeContolQaApproval(requestContext);
                List<ChangeContolQaApproval> result = ChangeContolQaApprovalConverter.SetAllChangeContolQaApproval(dataset);
                return new ResponseContext<ChangeContolQaApproval>() { RowCount = CommonConverter.SetRowsCount(dataset), Response = result };
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public ChangeContolQaApproval GetChangeContolQaApprovalByChangeContolQaApprovalId(System.Int32? changeContolQaApprovalId)
        {
            try
            {
                DataSet dataset = changeContolQaApprovalData.GetChangeContolQaApprovalByChangeContolQaApprovalId(changeContolQaApprovalId);
                ChangeContolQaApproval result = ChangeContolQaApprovalConverter.SetChangeContolQaApproval(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool SaveChangeContolQaApproval(ChangeContolQaApproval changeContolQaApproval)
        {
            try
            {
                String validationMessages = ChangeContolQaApprovalValidator.IsValidChangeContolQaApproval(changeContolQaApproval);
                if (validationMessages.Length <= 0)
                {
                    var result = changeContolQaApprovalData.SaveChangeContolQaApproval(changeContolQaApproval);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool UpdateChangeContolQaApproval(ChangeContolQaApproval changeContolQaApproval)
        {
            try
            {
                String validationMessages = ChangeContolQaApprovalValidator.IsValidChangeContolQaApproval(changeContolQaApproval);
                if (validationMessages.Length <= 0)
                {
                    bool result = changeContolQaApprovalData.UpdateChangeContolQaApproval(changeContolQaApproval);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool DeleteChangeContolQaApprovalByChangeContolQaApprovalId(System.Int32? changeContolQaApprovalId)
        {
            try
            {
                return changeContolQaApprovalData.DeleteChangeContolQaApprovalByChangeContolQaApprovalId(changeContolQaApprovalId);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool DeleteAllChangeContolQaApproval(List<int> changeContolQaApprovalIds)
        {
            try
            {
                return changeContolQaApprovalData.DeleteAllChangeContolQaApproval(changeContolQaApprovalIds);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public List<ChangeContolQaApproval> GetChangeContolQaApprovalByChangeControlRegistrationId(System.Int32? changeControlId)
        {
            try
            {
                DataSet dataset = changeContolQaApprovalData.GetChangeContolQaApprovalByChangeControlRegistrationId(changeControlId);
                List<ChangeContolQaApproval> result = ChangeContolQaApprovalConverter.SetAllChangeContolQaApproval(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool DeleteChangeContolQaApprovalByChangeControlRegistrationId(System.Int32? changeControlId)
        {
            try
            {
                return changeContolQaApprovalData.DeleteChangeContolQaApprovalByChangeControlRegistrationId(changeControlId);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}
