//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.WEB.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using QAMS.Common.Entities;
    using QAMS.WEB.Entities;
    using QAMS.WEB.Data;
    using Newtonsoft.Json;


    // Comment
    public class ChangeControlRegistrationService : IChangeControlRegistrationService
    {

        private readonly IChangeControlRegistrationData changeControlRegistrationData;

        /// <summary>
        /// 
        /// </summary>
        /// <param name="changeControlRegistrationData"></param>
        public ChangeControlRegistrationService(IChangeControlRegistrationData changeControlRegistrationData)
        {
            this.changeControlRegistrationData = changeControlRegistrationData;
        }

        public ResponseContext<ChangeControlRegistration> GetAllChangeControlRegistration(RequestContext requestContext)
        {
            try
            {
                DataSet dataset = changeControlRegistrationData.GetAllChangeControlRegistration(requestContext);
                List<ChangeControlRegistration> result = ChangeControlRegistrationConverter.SetAllChangeControlRegistration(dataset);
                return new ResponseContext<ChangeControlRegistration>() { RowCount = CommonConverter.SetRowsCount(dataset), Response = result };
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        public ResponseContext<ChangeControlRegistration> GetAllChangeControlbyPlant(RequestContext requestContext)
        {
            try
            {
                DataSet dataset = changeControlRegistrationData.GetAllChangeControlbyPlant(requestContext);
                List<ChangeControlRegistration> result = ChangeControlRegistrationConverter.SetAllChangeControlRegPLant(dataset);
                return new ResponseContext<ChangeControlRegistration>() { RowCount = CommonConverter.SetRowsCount(dataset), Response = result };
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        public ChangeControlRegistration GetChangeControlRegistrationByChangeControlId(System.Int32? changeControlId)
        {
            try
            {
                DataSet dataset = changeControlRegistrationData.GetChangeControlRegistrationByChangeControlId(changeControlId);
                ChangeControlRegistration result = ChangeControlRegistrationConverter.SetChangeControlRegistration(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool SaveChangeControlRegistration(ChangeControlRegistration changeControlRegistration)
        {
            try
            {
                String validationMessages = ChangeControlRegistrationValidator.IsValidChangeControlRegistration(changeControlRegistration);
                if (validationMessages.Length <= 0)
                {
                    changeControlRegistration.RequestDetailsJson = JsonConvert.SerializeObject(changeControlRegistration.requestDetails, Formatting.Indented);
                    changeControlRegistration.ChangeDetailsJson = JsonConvert.SerializeObject(changeControlRegistration.changeDetails, Formatting.Indented);
                    changeControlRegistration.ImpactDetailsJson = JsonConvert.SerializeObject(changeControlRegistration.impactAssessmentDetails, Formatting.Indented);
                    var result = changeControlRegistrationData.SaveChangeControlRegistration(changeControlRegistration);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool UpdateChangeControlRegistration(ChangeControlRegistration changeControlRegistration)
        {
            try
            {
                String validationMessages = ChangeControlRegistrationValidator.IsValidChangeControlRegistration(changeControlRegistration);
                if (validationMessages.Length <= 0)
                {
                    bool result = changeControlRegistrationData.UpdateChangeControlRegistration(changeControlRegistration);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool DeleteChangeControlRegistrationByChangeControlId(System.Int32? changeControlId)
        {
            try
            {
                return changeControlRegistrationData.DeleteChangeControlRegistrationByChangeControlId(changeControlId);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool DeleteAllChangeControlRegistration(List<int> changeControlIds)
        {
            try
            {
                return changeControlRegistrationData.DeleteAllChangeControlRegistration(changeControlIds);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}
