//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Sheet1.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using QAMS.Entities;
    using VAMLIbrary.Core.Extentions;
    using QAMS.Common.Entities;
    using QAMS.WEB.Services;


    // Comment
    public static class ActionPlanReviewConverter
    {
        
        public static List<ActionPlanReview> SetAllActionPlanReview(DataSet dataset)
        {
            try
            {
                List<ActionPlanReview> result = new List<ActionPlanReview>();
                ActionPlanReview actionPlanReviewData;
                if (dataset != null && dataset.Tables.Count > 0 && dataset.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; (i < dataset.Tables[0].Rows.Count); i = (i + 1))
                    {
                        DataRow row = dataset.Tables[0].Rows[i];
                        actionPlanReviewData = new ActionPlanReview();
                        actionPlanReviewData.InitiativeId = DatatypeConverter.SetIntValue(row[ActionPlanReviewConstants.InitiativeId.TrimAt()]);
                        actionPlanReviewData.InitiativeName = Convert.ToString(row[ActionPlanReviewConstants.InitiativeName.TrimAt()]);
                        actionPlanReviewData.IsSave = DatatypeConverter.SetBoolValue(row[ActionPlanReviewConstants.IsSave.TrimAt()]);
                        actionPlanReviewData.Comments = Convert.ToString(row[ActionPlanReviewConstants.Comments.TrimAt()]);
                        actionPlanReviewData.Status = Convert.ToString(row[ActionPlanReviewConstants.Status.TrimAt()]);
                        actionPlanReviewData.CreatedBy = DatatypeConverter.SetIntValue(row[ActionPlanReviewConstants.CreatedBy.TrimAt()]);
                        actionPlanReviewData.UpdatedBy = DatatypeConverter.SetIntValue(row[ActionPlanReviewConstants.UpdatedBy.TrimAt()]);
                        actionPlanReviewData.CreatedDate = DatatypeConverter.SetDateTime(row[ActionPlanReviewConstants.CreatedDate.TrimAt()]);
                        actionPlanReviewData.UpdatedDate = DatatypeConverter.SetDateTime(row[ActionPlanReviewConstants.UpdatedDate.TrimAt()]);
                        actionPlanReviewData.Plant = DatatypeConverter.SetIntValue(row[ActionPlanReviewConstants.Plant.TrimAt()]);
                        actionPlanReviewData.APId = DatatypeConverter.SetIntValue(row[ActionPlanReviewConstants.APId.TrimAt()]);
                        actionPlanReviewData.Decision = DatatypeConverter.SetBoolValue(row[ActionPlanReviewConstants.Decision.TrimAt()]);
                        actionPlanReviewData.Remarks = Convert.ToString(row[ActionPlanReviewConstants.Remarks.TrimAt()]);
                        actionPlanReviewData.ActionPlanReviewComments = Convert.ToString(row[ActionPlanReviewConstants.ActionPlanReviewComments.TrimAt()]);
                        actionPlanReviewData.APDocument = Convert.ToString(row[ActionPlanReviewConstants.APDocument.TrimAt()]);
                        actionPlanReviewData.ModifiedBy = Convert.ToString(row[ActionPlanReviewConstants.ModifiedBy.TrimAt()]);
                        actionPlanReviewData.ModifiedDate = DatatypeConverter.SetDateTime(row[ActionPlanReviewConstants.ModifiedDate.TrimAt()]);
                        result.Add(actionPlanReviewData);
                    }
                }
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public static ActionPlanReview SetActionPlanReview(DataSet dataset)
        {
            var result = SetAllActionPlanReview(dataset);
            if (result.Count > 0)
            {
                return result.FirstOrDefault();
            }
            return null;
        }
    }
}
