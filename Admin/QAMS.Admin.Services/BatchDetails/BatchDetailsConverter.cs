//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Admin.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using QAMS.Admin.Entities;
    using VAMLIbrary.Core.Extentions;
    using QAMS.Common.Entities;
    using QAMS.WEB.Entities;


    // Comment
    public static class BatchDetailsConverter
    {
        
        public static List<BatchDetails> SetAllBatchDetails(DataSet dataset)
        {
            try
            {
                List<BatchDetails> result = new List<BatchDetails>();
                BatchDetails batchDetailsData;
                if (dataset != null && dataset.Tables.Count > 0 && dataset.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; (i < dataset.Tables[0].Rows.Count); i = (i + 1))
                    {
                        DataRow row = dataset.Tables[0].Rows[i];
                        batchDetailsData = new BatchDetails();
                        batchDetailsData.Id = DatatypeConverter.SetIntValue(row[BatchDetailsConstants.Id.TrimAt()]);
                        batchDetailsData.BatchId = Convert.ToString(row[BatchDetailsConstants.BatchId.TrimAt()]);
                        batchDetailsData.Material = Convert.ToString(row[BatchDetailsConstants.Material.TrimAt()]);
                        batchDetailsData.ARNumber = Convert.ToString(row[BatchDetailsConstants.ARNumber.TrimAt()]);
                        batchDetailsData.InitiatedBy = Convert.ToString(row[BatchDetailsConstants.InitiatedBy.TrimAt()]);
                        batchDetailsData.InitiatedOn = DatatypeConverter.SetDateTime(row[BatchDetailsConstants.InitiatedOn.TrimAt()]);
                        batchDetailsData.CreatedBy = Convert.ToString(row[BatchDetailsConstants.CreatedBy.TrimAt()]);
                        batchDetailsData.CreatedDate = DatatypeConverter.SetDateTime(row[BatchDetailsConstants.CreatedDate.TrimAt()]);
                        batchDetailsData.ModifiedBy = Convert.ToString(row[BatchDetailsConstants.ModifiedBy.TrimAt()]);
                        batchDetailsData.ModifiedDate = DatatypeConverter.SetDateTime(row[BatchDetailsConstants.ModifiedDate.TrimAt()]);
                        result.Add(batchDetailsData);
                    }
                }
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public static BatchDetails SetBatchDetails(DataSet dataset)
        {
            var result = SetAllBatchDetails(dataset);
            if (result.Count > 0)
            {
                return result.FirstOrDefault();
            }
            return null;
        }
    }
}
