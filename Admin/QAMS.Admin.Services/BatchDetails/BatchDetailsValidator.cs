//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Admin.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using QAMS.Admin.Entities;
    using VAMLIbrary.Core.Validators;
    using QAMS.WEB.Entities;


    // Comment
    public static class BatchDetailsValidator
    {
        
        public static string IsValidBatchDetails(BatchDetails batchDetails)
        {
            try
            {
                StringBuilder validationMessages = new StringBuilder();
                ValidationHelper validationHelper = new ValidationHelper();
                validationMessages.Append(validationHelper.NullCheckValidator(batchDetails.BatchId, nameof(batchDetails.BatchId)));
                validationMessages.Append(validationHelper.LengthCheckValidator(batchDetails.BatchId,150, nameof(batchDetails.BatchId)));
                validationMessages.Append(validationHelper.NullCheckValidator(batchDetails.productMaterial, nameof(batchDetails.productMaterial)));
                validationMessages.Append(validationHelper.LengthCheckValidator(batchDetails.productMaterial,150, nameof(batchDetails.productMaterial)));
                validationMessages.Append(validationHelper.NullCheckValidator(batchDetails.arno, nameof(batchDetails.arno)));
                validationMessages.Append(validationHelper.LengthCheckValidator(batchDetails.arno,150, nameof(batchDetails.arno)));
                validationMessages.Append(validationHelper.NullCheckValidator(batchDetails.InitiatedBy, nameof(batchDetails.InitiatedBy)));
                validationMessages.Append(validationHelper.LengthCheckValidator(batchDetails.InitiatedBy,150, nameof(batchDetails.InitiatedBy)));
                validationMessages.Append(validationHelper.LengthCheckValidator(batchDetails.CreatedBy,100, nameof(batchDetails.CreatedBy)));
                validationMessages.Append(validationHelper.LengthCheckValidator(batchDetails.ModifiedBy,100, nameof(batchDetails.ModifiedBy)));
                if (!String.IsNullOrEmpty(validationMessages.ToString()))
                {
                    return Convert.ToString(validationMessages.Remove(validationMessages.ToString().LastIndexOf(','),1));
                }
                else
                {
                    return Convert.ToString(validationMessages);
                }
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}
