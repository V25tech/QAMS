//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Admin.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using QAMS.Admin.Entities;
    using VAMLIbrary.Core.Extentions;
    using QAMS.Common.Entities;
    
    
    // Comment
    public static class UserConverter
    {
        
        public static List<User> SetAllUser(DataSet dataset)
        {
            try
            {
                List<User> result = new List<User>();
                User userData;
                if (dataset != null && dataset.Tables.Count > 0 && dataset.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; (i < dataset.Tables[0].Rows.Count); i = (i + 1))
                    {
                        DataRow row = dataset.Tables[0].Rows[i];
                        userData = new User();
                        userData.Id = DatatypeConverter.SetIntValue(row[UserConstants.Id.TrimAt()]);
                        userData.RoleId = DatatypeConverter.SetIntValue(row[UserConstants.RoleId.TrimAt()]);
                        userData.roleName = Convert.ToString(row["RoleName"]);
                        userData.UserId = DatatypeConverter.SetIntValue(row[UserConstants.UserId.TrimAt()]);
                        userData.FirstName = Convert.ToString(row[UserConstants.FirstName.TrimAt()]);
                        userData.Plants = Convert.ToString(row[UserConstants.Plants.TrimAt()]);
                        userData.LastName = Convert.ToString(row[UserConstants.LastName.TrimAt()]);
                        userData.DepartmentId = DatatypeConverter.SetIntValue(row[UserConstants.DepartmentId.TrimAt()]);
                        userData.Department = Convert.ToString(row["NAME_PSY"]);
                        userData.EmployeeId = Convert.ToString(row[UserConstants.EmployeeId.TrimAt()]);
                        userData.EmailId = DatatypeConverter.SetIntValue(row[UserConstants.EmailId.TrimAt()]);
                        userData.Password = Convert.ToString(row[UserConstants.Password.TrimAt()]);
                        userData.IsActive = DatatypeConverter.SetBoolValue(row[UserConstants.IsActive.TrimAt()]);
                        userData.ForgotLoginPassword = DatatypeConverter.SetBoolValue(row[UserConstants.ForgotLoginPassword.TrimAt()]);
                        userData.CreatedBy = Convert.ToString(row[UserConstants.CreatedBy.TrimAt()]);
                        userData.CreatedDate = DatatypeConverter.SetDateTime(row[UserConstants.CreatedDate.TrimAt()]);
                        userData.ModifiedBy = Convert.ToString(row[UserConstants.ModifiedBy.TrimAt()]);
                        userData.ModifiedDate = DatatypeConverter.SetDateTime(row[UserConstants.ModifiedDate.TrimAt()]);
                        result.Add(userData);
                    }
                }
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public static User SetUser(DataSet dataset)
        {
            var result = SetAllUser(dataset);
            if (result.Count > 0)
            {
                return result.FirstOrDefault();
            }
            return null;
        }
        
        public static DataTable SetDataSet(List<User> users)
        {
            DataTable dataTable = new DataTable();
            DataRow row = null;
            SetDataTableColumns(dataTable);
            try
            {
                if (users != null && users.Count > 0)
                {
                    for (int i = 0; (i < users.Count); i = (i + 1))
                    {
                        row = dataTable.NewRow();
                        row[UserConstants.Id.TrimAt()] = users[i].Id;
                        row[UserConstants.RoleId.TrimAt()] = users[i].RoleId;
                        row[UserConstants.UserId.TrimAt()] = users[i].UserId;
                        row[UserConstants.FirstName.TrimAt()] = users[i].FirstName;
                        row[UserConstants.Plants.TrimAt()] = users[i].Plants;
                        row[UserConstants.LastName.TrimAt()] = users[i].LastName;
                        row[UserConstants.DepartmentId.TrimAt()] = users[i].DepartmentId;
                        row[UserConstants.EmployeeId.TrimAt()] = users[i].EmployeeId;
                        row[UserConstants.EmailId.TrimAt()] = users[i].EmailId;
                        row[UserConstants.Password.TrimAt()] = users[i].Password;
                        row[UserConstants.IsActive.TrimAt()] = users[i].IsActive;
                        row[UserConstants.ForgotLoginPassword.TrimAt()] = users[i].ForgotLoginPassword;
                        row[UserConstants.CreatedBy.TrimAt()] = users[i].CreatedBy;
                        row[UserConstants.CreatedDate.TrimAt()] = users[i].CreatedDate;
                        row[UserConstants.ModifiedBy.TrimAt()] = users[i].ModifiedBy;
                        row[UserConstants.ModifiedDate.TrimAt()] = users[i].ModifiedDate;
                        dataTable.Rows.Add(row);
                    }
                }
                return dataTable;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        private static void SetDataTableColumns(DataTable dataTable)
        {
            dataTable.TableName = "UT_User_PSY";
            dataTable.Columns.Add(UserConstants.Id.TrimAt());
            dataTable.Columns.Add(UserConstants.RoleId.TrimAt());
            dataTable.Columns.Add(UserConstants.UserId.TrimAt());
            dataTable.Columns.Add(UserConstants.FirstName.TrimAt());
            dataTable.Columns.Add(UserConstants.Plants.TrimAt());
            dataTable.Columns.Add(UserConstants.LastName.TrimAt());
            dataTable.Columns.Add(UserConstants.DepartmentId.TrimAt());
            dataTable.Columns.Add(UserConstants.EmployeeId.TrimAt());
            dataTable.Columns.Add(UserConstants.EmailId.TrimAt());
            dataTable.Columns.Add(UserConstants.Password.TrimAt());
            dataTable.Columns.Add(UserConstants.IsActive.TrimAt());
            dataTable.Columns.Add(UserConstants.ForgotLoginPassword.TrimAt());
            dataTable.Columns.Add(UserConstants.CreatedBy.TrimAt());
            dataTable.Columns.Add(UserConstants.CreatedDate.TrimAt());
            dataTable.Columns.Add(UserConstants.ModifiedBy.TrimAt());
            dataTable.Columns.Add(UserConstants.ModifiedDate.TrimAt());
        }
    }
}
