//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Admin.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using QAMS.Common.Entities;
    using QAMS.Admin.Entities;
    using QAMS.Admin.Data;


    // Comment
    public class CustomerService : ICustomerService
    {

        private readonly ICustomerData customerData;

        /// <summary>
        /// 
        /// </summary>
        /// <param name="customerData"></param>
        public CustomerService(ICustomerData customerData)
        {
            this.customerData = customerData;
        }

        public ResponseContext<CustomerRegistration> GetAllCustomer(RequestContext requestContext)
        {
            try
            {
                DataSet dataset = customerData.GetAllCustomer(requestContext);
                List<CustomerRegistration> result = CustomerConverter.SetAllCustomer(dataset);
                return new ResponseContext<CustomerRegistration>() { RowCount = CommonConverter.SetRowsCount(dataset), Response = result };
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public CustomerRegistration GetCustomerById(System.Int32? id)
        {
            try
            {
                DataSet dataset = customerData.GetCustomerById(id);
                CustomerRegistration result = CustomerConverter.SetCustomer(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool SaveCustomer(CustomerRegistration customer)
        {
            try
            {
                customer.createdBy = "Admin";
                customer.ModifiedBy = "Admin";
                String validationMessages = CustomerValidator.IsValidCustomer(customer);
                if (validationMessages.Length <= 0)
                {                    
                    var result = customerData.SaveCustomer(customer);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool UpdateCustomer(CustomerRegistration customer)
        {
            try
            {
                String validationMessages = CustomerValidator.IsValidCustomer(customer);
                if (validationMessages.Length <= 0)
                {
                    customer.createdBy = "Admin";
                    customer.ModifiedBy = "Admin";
                    bool result = customerData.UpdateCustomer(customer);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool DeleteCustomerById(System.Int32? id)
        {
            try
            {
                return customerData.DeleteCustomerById(id);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }

        public bool DeleteAllCustomer(List<int> ids)
        {
            try
            {
                return customerData.DeleteAllCustomer(ids);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}
