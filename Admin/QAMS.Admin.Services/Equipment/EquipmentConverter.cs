//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Admin.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using QAMS.Admin.Entities;
    using VAMLIbrary.Core.Extentions;
    using QAMS.Common.Entities;
    
    
    // Comment
    public static class EquipmentConverter
    {
        
        public static List<Equipment> SetAllEquipment(DataSet dataset)
        {
            try
            {
                List<Equipment> result = new List<Equipment>();
                Equipment equipmentData;
                if (dataset != null && dataset.Tables.Count > 0 && dataset.Tables[0].Rows.Count > 0)
                {
                    for (int i = 0; (i < dataset.Tables[0].Rows.Count); i = (i + 1))
                    {
                        DataRow row = dataset.Tables[0].Rows[i];
                        equipmentData = new Equipment();
                        equipmentData.Id = DatatypeConverter.SetIntValue(row[EquipmentConstants.Id.TrimAt()]);
                        equipmentData.equipmentName = Convert.ToString(row[EquipmentConstants.Name.TrimAt()]);
                        equipmentData.department = Convert.ToString(row[EquipmentConstants.Department.TrimAt()]);
                        equipmentData.EquipmentId = Convert.ToString(row[EquipmentConstants.EquipmentId.TrimAt()]);
                        equipmentData.Make = Convert.ToString(row[EquipmentConstants.Make.TrimAt()]);
                        equipmentData.Model = Convert.ToString(row[EquipmentConstants.Model.TrimAt()]);
                        equipmentData.SerialNumber = Convert.ToString(row[EquipmentConstants.SerialNumber.TrimAt()]);
                        equipmentData.InstalledLocation = Convert.ToString(row[EquipmentConstants.InstalledLocation.TrimAt()]);
                        equipmentData.DepartmentId = DatatypeConverter.SetIntValue(row[EquipmentConstants.DepartmentId.TrimAt()]);
                        equipmentData.InstalledOn = DatatypeConverter.SetDateTime(row[EquipmentConstants.InstalledOn.TrimAt()]);
                        equipmentData.WarrantyExpiresOn = DatatypeConverter.SetDateTime(row[EquipmentConstants.WarrantyExpiresOn.TrimAt()]);
                        equipmentData.SuppliedBy = Convert.ToString(row[EquipmentConstants.SuppliedBy.TrimAt()]);
                        equipmentData.Software = Convert.ToString(row[EquipmentConstants.Software.TrimAt()]);
                        equipmentData.CreatedBy = Convert.ToString(row[EquipmentConstants.CreatedBy.TrimAt()]);
                        equipmentData.CreatedDate = DatatypeConverter.SetDateTime(row[EquipmentConstants.CreatedDate.TrimAt()]);
                        equipmentData.ModifiedBy = Convert.ToString(row[EquipmentConstants.ModifiedBy.TrimAt()]);
                        equipmentData.ModifiedDate = DatatypeConverter.SetDateTime(row[EquipmentConstants.ModifiedDate.TrimAt()]);
                        result.Add(equipmentData);
                    }
                }
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public static Equipment SetEquipment(DataSet dataset)
        {
            var result = SetAllEquipment(dataset);
            if (result.Count > 0)
            {
                return result.FirstOrDefault();
            }
            return null;
        }
        
        public static DataTable SetDataSet(List<Equipment> equipments)
        {
            DataTable dataTable = new DataTable();
            DataRow row = null;
            SetDataTableColumns(dataTable);
            try
            {
                if (equipments != null && equipments.Count > 0)
                {
                    for (int i = 0; (i < equipments.Count); i = (i + 1))
                    {
                        row = dataTable.NewRow();
                        row[EquipmentConstants.Id.TrimAt()] = equipments[i].Id;
                        row[EquipmentConstants.Name.TrimAt()] = equipments[i].equipmentName;
                        row[EquipmentConstants.EquipmentId.TrimAt()] = equipments[i].EquipmentId;
                        row[EquipmentConstants.Make.TrimAt()] = equipments[i].Make;
                        row[EquipmentConstants.Model.TrimAt()] = equipments[i].Model;
                        row[EquipmentConstants.SerialNumber.TrimAt()] = equipments[i].SerialNumber;
                        row[EquipmentConstants.InstalledLocation.TrimAt()] = equipments[i].InstalledLocation;
                        row[EquipmentConstants.DepartmentId.TrimAt()] = equipments[i].DepartmentId;
                        row[EquipmentConstants.InstalledOn.TrimAt()] = equipments[i].InstalledOn;
                        row[EquipmentConstants.WarrantyExpiresOn.TrimAt()] = equipments[i].WarrantyExpiresOn;
                        row[EquipmentConstants.SuppliedBy.TrimAt()] = equipments[i].SuppliedBy;
                        row[EquipmentConstants.Software.TrimAt()] = equipments[i].Software;
                        row[EquipmentConstants.CreatedBy.TrimAt()] = equipments[i].CreatedBy;
                        row[EquipmentConstants.CreatedDate.TrimAt()] = equipments[i].CreatedDate;
                        row[EquipmentConstants.ModifiedBy.TrimAt()] = equipments[i].ModifiedBy;
                        row[EquipmentConstants.ModifiedDate.TrimAt()] = equipments[i].ModifiedDate;
                        dataTable.Rows.Add(row);
                    }
                }
                return dataTable;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        private static void SetDataTableColumns(DataTable dataTable)
        {
            dataTable.TableName = "UT_Equipment_PSY";
            dataTable.Columns.Add(EquipmentConstants.Id.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.Name.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.EquipmentId.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.Make.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.Model.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.SerialNumber.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.InstalledLocation.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.DepartmentId.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.InstalledOn.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.WarrantyExpiresOn.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.SuppliedBy.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.Software.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.CreatedBy.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.CreatedDate.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.ModifiedBy.TrimAt());
            dataTable.Columns.Add(EquipmentConstants.ModifiedDate.TrimAt());
        }
    }
}
