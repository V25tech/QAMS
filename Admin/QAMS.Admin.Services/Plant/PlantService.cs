//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Admin.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using QAMS.Common.Entities;
    using QAMS.Admin.Entities;
    using QAMS.Admin.Data;
    
    
    // Comment
    public class PlantService : IPlantService
    {
        
        private readonly IPlantData plantData;
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="plantData"></param>
        public PlantService(IPlantData plantData)
        {
            this.plantData = plantData;
        }
        
        public ResponseContext<Plant> GetAllPlant(RequestContext requestContext)
        {
            try
            {
                DataSet dataset = plantData.GetAllPlant(requestContext);
                List<Plant> result = PlantConverter.SetAllPlant(dataset);
                return new ResponseContext<Plant>() { RowCount = CommonConverter.SetRowsCount(dataset), Response = result };
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public Plant GetPlantById(System.Int32? id)
        {
            try
            {
                DataSet dataset = plantData.GetPlantById(id);
                Plant result = PlantConverter.SetPlant(dataset);
                return result;
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool SavePlant(Plant plant)
        {
            try
            {
                plant.createdBy = "admin";
                plant.ModifiedBy = "admin";
                String validationMessages = PlantValidator.IsValidPlant(plant);
                if (validationMessages.Length <= 0)
                {
                    var result = plantData.SavePlant(plant);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool UpdatePlant(Plant plant)
        {
            try
            {
                String validationMessages = PlantValidator.IsValidPlant(plant);
                if (validationMessages.Length <= 0)
                {
                    bool result = plantData.UpdatePlant(plant);
                    return result;
                }
                throw new System.Exception(validationMessages);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool DeletePlantById(System.Int32? id)
        {
            try
            {
                return plantData.DeletePlantById(id);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
        
        public bool DeleteAllPlant(List<int> ids)
        {
            try
            {
                return plantData.DeleteAllPlant(ids);
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}
