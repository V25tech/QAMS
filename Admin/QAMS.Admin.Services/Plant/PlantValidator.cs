//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Admin.Services
{
    using System;
    using System.Text;
    using System.IO;
    using System.Linq;
    using System.Data;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using QAMS.Admin.Entities;
    using VAMLIbrary.Core.Validators;
    
    
    // Comment
    public static class PlantValidator
    {
        
        public static string IsValidPlant(Plant plant)
        {
            try
            {
                StringBuilder validationMessages = new StringBuilder();
                ValidationHelper validationHelper = new ValidationHelper();
                validationMessages.Append(validationHelper.NullCheckValidator(plant.name, nameof(plant.name)));
                validationMessages.Append(validationHelper.LengthCheckValidator(plant.name, 150, nameof(plant.name)));
                validationMessages.Append(validationHelper.NullCheckValidator(plant.code, nameof(plant.code)));
                validationMessages.Append(validationHelper.LengthCheckValidator(plant.code, 150, nameof(plant.code)));
                validationMessages.Append(validationHelper.NullCheckValidator(plant.address, nameof(plant.address)));
                validationMessages.Append(validationHelper.LengthCheckValidator(plant.address, 300, nameof(plant.address)));
                validationMessages.Append(validationHelper.NullCheckValidator(plant.comment, nameof(plant.comment)));
                validationMessages.Append(validationHelper.LengthCheckValidator(plant.comment, 150, nameof(plant.comment)));
                validationMessages.Append(validationHelper.NullCheckValidator(plant.createdBy, nameof(plant.createdBy)));
                validationMessages.Append(validationHelper.LengthCheckValidator(plant.createdBy, 150, nameof(plant.createdBy)));
                validationMessages.Append(validationHelper.NullCheckValidator(plant.ModifiedBy, nameof(plant.ModifiedBy)));
                validationMessages.Append(validationHelper.LengthCheckValidator(plant.ModifiedBy,150, nameof(plant.ModifiedBy)));
                if (!String.IsNullOrEmpty(validationMessages.ToString()))
                {
                    return Convert.ToString(validationMessages.Remove(validationMessages.ToString().LastIndexOf(','),1));
                }
                else
                {
                    return Convert.ToString(validationMessages);
                }
            }
            catch (System.Exception ex)
            {
                throw;
            }
        }
    }
}
