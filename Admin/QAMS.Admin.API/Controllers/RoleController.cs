//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Controllers
{
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Authorization;
    using QAMS.Common.Entities;
    using QAMS.Admin.Entities;
    using QAMS.Admin.Services;
    
    
    /// <summary>
    /// Comment
    /// </summary>
    [ApiController()]
    [Route("api/role")]
    public class RoleController : ControllerBase
    {
        
        private readonly IRoleService roleService;
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="roleService"></param>
        public RoleController(IRoleService roleService)
        {
            this.roleService = roleService;
        }
        
        /// <summary>
        /// This method is used to Get List of Role
        /// </summary>
        /// <param name="requestContext"></param>
        [HttpPost("GetAllRole")]
        public ActionResult<ResponseContext<Role>> GetAllRole(RequestContext requestContext)
        {
            var result = roleService.GetAllRole(requestContext);
            return result;
        }
        
        /// <summary>
        /// This method is used to Get Role By Id id
        /// </summary>
        /// <param name="id"></param>
        [HttpGet("{id}")]
        public ActionResult<Role> GetRoleById(System.Int32? id)
        {
            var result = roleService.GetRoleById(id);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Save Role
        /// </summary>
        /// <param name="role"></param>
        [HttpPost("saverole")]
        public ActionResult<System.Boolean> SaveRole(Role role)
        {
            var result = roleService.SaveRole(role);
            return result;
        }
        
        /// <summary>
        /// This Method is used to update Role
        /// </summary>
        /// <param name="role"></param>
        [HttpPost("updaterole")]
        public ActionResult<System.Boolean> UpdateRole(Role role)
        {
            var result = roleService.UpdateRole(role);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Delete Role By Id id
        /// </summary>
        /// <param name="id"></param>
        [HttpDelete("{id}")]
        public ActionResult<bool> DeleteRoleById(System.Int32? id)
        {
            var result = roleService.DeleteRoleById(id);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Delete Role By Multiple ids ids
        /// </summary>
        /// <param name="ids"></param>
        [HttpDelete("deleteAll")]
        public ActionResult<bool> DeleteAllRole(List<int> ids)
        {
            var result = roleService.DeleteAllRole(ids);
            return result;
        }
    }
}
