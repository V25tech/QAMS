//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Controllers
{
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Authorization;
    using QAMS.Common.Entities;
    using QAMS.Admin.Entities;
    using QAMS.Admin.Services;
    
    
    /// <summary>
    /// Comment
    /// </summary>
    [ApiController()]
    [Route("api/qualityevent")]
    public class QualityEventController : ControllerBase
    {
        
        private readonly IQualityEventService qualityEventService;
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="qualityEventService"></param>
        public QualityEventController(IQualityEventService qualityEventService)
        {
            this.qualityEventService = qualityEventService;
        }
        
        /// <summary>
        /// This method is used to Get List of QualityEvent
        /// </summary>
        /// <param name="requestContext"></param>
        [HttpPost()]
        public ActionResult<ResponseContext<QualityEvent>> GetAllQualityEvent(RequestContext requestContext)
        {
            var result = qualityEventService.GetAllQualityEvent(requestContext);
            return result;
        }
        
        /// <summary>
        /// This method is used to Get QualityEvent By Id id
        /// </summary>
        /// <param name="id"></param>
        [HttpGet("{id}")]
        public ActionResult<QualityEvent> GetQualityEventById(System.Int32? id)
        {
            var result = qualityEventService.GetQualityEventById(id);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Save QualityEvent
        /// </summary>
        /// <param name="qualityEvent"></param>
        [HttpPost("savequalityevent")]
        public ActionResult<System.Boolean> SaveQualityEvent(QualityEvent qualityEvent)
        {
            var result = qualityEventService.SaveQualityEvent(qualityEvent);
            return result;
        }
        
        /// <summary>
        /// This Method is used to update QualityEvent
        /// </summary>
        /// <param name="qualityEvent"></param>
        [HttpPost("updatequalityevent")]
        public ActionResult<System.Boolean> UpdateQualityEvent(QualityEvent qualityEvent)
        {
            var result = qualityEventService.UpdateQualityEvent(qualityEvent);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Delete QualityEvent By Id id
        /// </summary>
        /// <param name="id"></param>
        [HttpDelete("{id}")]
        public ActionResult<bool> DeleteQualityEventById(System.Int32? id)
        {
            var result = qualityEventService.DeleteQualityEventById(id);
            return result;
        }
        
        /// <summary>
        /// This Method is used to Delete QualityEvent By Multiple ids ids
        /// </summary>
        /// <param name="ids"></param>
        [HttpDelete("deleteAll")]
        public ActionResult<bool> DeleteAllQualityEvent(List<int> ids)
        {
            var result = qualityEventService.DeleteAllQualityEvent(ids);
            return result;
        }
    }
}
