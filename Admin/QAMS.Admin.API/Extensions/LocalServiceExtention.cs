//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QAMS.Admin.API.Extensions
{
    using System.IO;
    using System.Text;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Collections.Generic;
    using Microsoft.Extensions.DependencyInjection;
    using QAMS.Admin.Services;
    using QAMS.Admin.Data;
    using VAMLibrary.Core;
    
    
    public static class LocalServiceExtention
    {
        
        public static void RegisterLocalServices(this IServiceCollection serviceCollection)
        {
            serviceCollection.AddSingleton<DataAccessHelper>();
            serviceCollection.AddScoped<IQualityEventService, QualityEventService>();
            serviceCollection.AddScoped<IQualityEventData, QualityEventData>();
            serviceCollection.AddScoped<IMasterDataService, MasterDataService>();
            serviceCollection.AddScoped<IMasterDataData, MasterDataData>();
            serviceCollection.AddScoped<IDepartmentService, DepartmentService>();
            serviceCollection.AddScoped<IDepartmentData, DepartmentData>();
            serviceCollection.AddScoped<ISecuritySettingService, SecuritySettingService>();
            serviceCollection.AddScoped<ISecuritySettingData, SecuritySettingData>();
            serviceCollection.AddScoped<IRoleService, RoleService>();
            serviceCollection.AddScoped<IRoleData, RoleData>();
            serviceCollection.AddScoped<IFunctionalProfileService, FunctionalProfileService>();
            serviceCollection.AddScoped<IFunctionalProfileData, FunctionalProfileData>();
            serviceCollection.AddScoped<IUserService, UserService>();
            serviceCollection.AddScoped<IUserData, UserData>();
            serviceCollection.AddScoped<IUserGroupService, UserGroupService>();
            serviceCollection.AddScoped<IUserGroupData, UserGroupData>();
            serviceCollection.AddScoped<IEquipmentService, EquipmentService>();
            serviceCollection.AddScoped<IEquipmentData, EquipmentData>();
            serviceCollection.AddScoped<IMarketService, MarketService>();
            serviceCollection.AddScoped<IMarketData, MarketData>();
            serviceCollection.AddScoped<ICustomerService, CustomerService>();
            serviceCollection.AddScoped<ICustomerData, CustomerData>();
            serviceCollection.AddScoped<IPlantService, PlantService>();
            serviceCollection.AddScoped<IPlantData, PlantData>();
            serviceCollection.AddScoped<IProductService, ProductService>();
            serviceCollection.AddScoped<IProductData, ProductData>();
            serviceCollection.AddScoped<IBatchDetailsService, BatchDetailsService>();
            serviceCollection.AddScoped<IBatchDetailsData, BatchDetailsData>();
            
        }
    }
}
